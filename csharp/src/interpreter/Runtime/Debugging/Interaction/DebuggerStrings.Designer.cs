//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DynamicScript.Runtime.Debugging.Interaction {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class DebuggerStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DebuggerStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DynamicScript.Runtime.Debugging.Interaction.DebuggerStrings", typeof(DebuggerStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DBG02: Bad debugger command..
        /// </summary>
        internal static string BadCommand {
            get {
                return ResourceManager.GetString("BadCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DBG01: Breakpoint at &apos;{0}&apos; frame in &apos;{1}&apos; thread. User data: &apos;{2}&apos;..
        /// </summary>
        internal static string BreakPointReached {
            get {
                return ResourceManager.GetString("BreakPointReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to continue - step through break point and continue script execution.
        /// </summary>
        internal static string ContinueCommand {
            get {
                return ResourceManager.GetString("ContinueCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DBG03: {0}.
        /// </summary>
        internal static string DebuggerError {
            get {
                return ResourceManager.GetString("DebuggerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to exec &lt;script-code&gt; - executes script code.
        /// </summary>
        internal static string ExecCommand {
            get {
                return ResourceManager.GetString("ExecCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ? - displays interactive debugger commands.
        /// </summary>
        internal static string HelpCommand {
            get {
                return ResourceManager.GetString("HelpCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to leave - terminates debugging.
        /// </summary>
        internal static string LeaveCommand {
            get {
                return ResourceManager.GetString("LeaveCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Main.
        /// </summary>
        internal static string MainThread {
            get {
                return ResourceManager.GetString("MainThread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to debugger&gt;&gt;.
        /// </summary>
        internal static string Prompt {
            get {
                return ResourceManager.GetString("Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DBG03: Constant or variable with the specified name doesn&apos;t exist.
        /// </summary>
        internal static string UnknownStorage {
            get {
                return ResourceManager.GetString("UnknownStorage", resourceCulture);
            }
        }
    }
}
